# Generated by Django 5.0 on 2025-05-28 07:09

import django.contrib.auth.models
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=255, unique=True, verbose_name='Логин')),
                ('password', models.CharField(max_length=128, verbose_name='Пароль')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('phone_number', models.CharField(max_length=11, unique=True, validators=[django.core.validators.MinLengthValidator(11), django.core.validators.RegexValidator('^[0-9]*$')], verbose_name='Телефон')),
                ('role', models.CharField(choices=[('Организация', 'Организация'), ('Аудитор', 'Аудитор'), ('Администратор', 'Администратор')], max_length=15, verbose_name='Роль')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField(auto_now_add=True, verbose_name='Время действия')),
                ('table_name', models.CharField(max_length=50, verbose_name='Таблица')),
                ('record_id', models.IntegerField(verbose_name='ID записи')),
                ('action_type', models.CharField(choices=[('INSERT', 'Добавление'), ('UPDATE', 'Изменение'), ('DELETE', 'Удаление')], max_length=10, verbose_name='Тип действия')),
                ('old_data', models.JSONField(blank=True, null=True, verbose_name='Старые данные')),
                ('new_data', models.JSONField(blank=True, null=True, verbose_name='Новые данные')),
                ('ip_address', models.CharField(blank=True, max_length=15, null=True, verbose_name='IP адрес')),
                ('user_agent', models.TextField(blank=True, null=True, verbose_name='User Agent')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Лог аудита',
                'verbose_name_plural': 'Логи аудита',
                'ordering': ['-action_time'],
            },
        ),
        migrations.CreateModel(
            name='AuditorCompany',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('address', models.TextField(verbose_name='Адрес')),
                ('postal_address', models.TextField(blank=True, null=True, verbose_name='Почтовый адрес')),
                ('ogrn', models.CharField(max_length=13, verbose_name='ОГРН')),
                ('quality_control', models.BooleanField(default=True, verbose_name='Контроль качества')),
                ('certificate_number', models.CharField(max_length=50, verbose_name='Номер сертификата')),
                ('au_fio', models.CharField(max_length=255, verbose_name='ФИО аудитора')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Аудиторская компания',
                'verbose_name_plural': 'Аудиторские компании',
            },
        ),
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('На рассмотрении', 'На рассмотрении'), ('Принято', 'Принято'), ('Отклонено', 'Отклонено'), ('Завершено', 'Завершено')], default='На рассмотрении', max_length=15, verbose_name='Статус')),
                ('file', models.FileField(blank=True, null=True, upload_to='applications/', verbose_name='Файл')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('audit_start', models.DateField(blank=True, null=True, verbose_name='Дата начала аудита')),
                ('audit_end', models.DateField(blank=True, null=True, verbose_name='Дата окончания аудита')),
                ('comments', models.TextField(blank=True, null=True, verbose_name='Комментарии')),
                ('analysis_result', models.TextField(blank=True, null=True, verbose_name='Результат анализа')),
                ('auditor_company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.auditorcompany', verbose_name='Аудиторская компания')),
            ],
            options={
                'verbose_name': 'Заявка',
                'verbose_name_plural': 'Заявки',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300, verbose_name='Название')),
                ('type', models.CharField(choices=[('pdf', 'PDF'), ('xlsx', 'Excel'), ('csv', 'CSV')], max_length=10, verbose_name='Тип файла')),
                ('upload_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата загрузки')),
                ('file', models.FileField(upload_to='documents/', verbose_name='Файл')),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.application', verbose_name='Заявка')),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Загрузил')),
            ],
            options={
                'verbose_name': 'Документ',
                'verbose_name_plural': 'Документы',
                'ordering': ['-upload_date'],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField(verbose_name='Сообщение')),
                ('is_read', models.BooleanField(default=False, verbose_name='Прочитано')),
                ('sent_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата отправки')),
                ('user_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL, verbose_name='Получатель')),
            ],
            options={
                'verbose_name': 'Уведомление',
                'verbose_name_plural': 'Уведомления',
                'ordering': ['-sent_date'],
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('address', models.TextField(blank=True, null=True, verbose_name='Адрес')),
                ('inn', models.CharField(blank=True, max_length=12, null=True, validators=[django.core.validators.RegexValidator('^[0-9]*$')], verbose_name='ИНН')),
                ('filials', models.BooleanField(default=False, verbose_name='Есть филиалы')),
                ('legal_cases', models.BooleanField(default=False, verbose_name='Судебные дела')),
                ('tax_audits', models.BooleanField(default=False, verbose_name='Налоговые проверки')),
                ('last_audit_date', models.DateField(blank=True, null=True, verbose_name='Дата последнего аудита')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Организация',
                'verbose_name_plural': 'Организации',
            },
        ),
        migrations.AddField(
            model_name='application',
            name='organization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.organization', verbose_name='Организация'),
        ),
    ]
